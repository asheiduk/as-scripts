#!/bin/bash

#
# Do some non-interactive commits into the current git repo.
#
# Used for building up example histories in test repositories.
#

# TODO: generate random commit messages with http://whatthecommit.com/index.txt
#	see https://github.com/ngerakines/commitment

#
# setup
#

#####################################################################
# git-sh-setup

dashless="$(basename -- "$0" | sed 's/-/ /')"
OPTIONS_STUCKLONG=t
OPTIONS_SPEC="\
$dashless [-r n]

Automatically edit and commit some file.
!!! Use only in test repositories !!!
--
r,random?!N			add N random text lines to file (default:10)
n=N					create N commits
f,file=!file		write to <file> (most likely generating a conflict)
q,quiet!			reduce output
"

SUBDIRECTORY_OK=true
. git-sh-setup

require_work_tree_exists
cd_to_toplevel

#####################################################################

tstamp(){
    date +%Y%m%d-%H%M%S
}

random_text () {
	# Inspired by https://unix.stackexchange.com/a/182761 and
	# http://www.bashoneliners.com/oneliners/199/ but improved
	# to not discard so much data and adding "-u" to fmt.
	tr '\200-\377' '\000-\177' </dev/urandom |
	tr '\000-\037\040-\077\100-\137' '\140-\177\140-\177\140-\177' |
	tr '\140\173-\177' '[\n*2][ *]' |
	sed 's/^ *//' |
	cat -s |
	fmt -u
}

#####################################################################

declare -i opt_random=0
declare -i opt_n=1
declare opt_file=
declare opt_quiet=

while [ $# != 0 ]
do
	case "$1" in
		--random)
			opt_random=10
			;;
		--random=*)
			opt_random=${1#--random=}
			(( opt_random > 0 )) || opt_random=0
			;;
		-n*)
			opt_n=${1#-n}
			(( opt_n > 0 )) || opt_n=1
			;;
		--file=*)
			opt_file=${1#--file=}
			;;
		--quiet)
			opt_quiet="--quiet"
			;;
		--)
			shift
			break;
	esac
	shift
done

[ -z "$*" ] || usage

#
# get information
#
user=$(git config --get user.name)
# usecases:
#  - empty repo (i.e. first commit)
#  - detached HEAD
#  - normal branch
branch=$(git symbolic-ref --quiet --short HEAD || echo 'HEAD')
# branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
tstamp=$(tstamp)
repo=$(basename -- "$PWD")

if [ -z "$opt_file" ]
then
	opt_file="$branch.txt"
fi
opt_file="$(echo "$opt_file" | sed 's|/|-|g')"

for ((i=0; i<opt_n; ++i))
do
	#
	# create/edit file(s)
	#
	[ -z "$opt_quiet" ] && echo "# appending to $opt_file ..."
	if ((opt_random > 0 ))
	then
		random_text | head --lines=$opt_random >> "$opt_file"
	else
		echo "$tstamp edit by $user in repository $repo on branch $branch" >> "$opt_file"
	fi
	git add "$opt_file"
	
	#
	# commit
	#
	git commit $opt_quiet -m "$tstamp edit by $user@$repo/$branch"
done
